#!/usr/bin/perl

use strict;
use warnings;

use File::Temp;
use LWP::UserAgent;
use HTTP::Request;
use IO::Zlib;
use Data::Dumper;
use Getopt::Long;

our $VERSION = "0.001";

sub getstore {
    my ($url, $fname) = @_;
    my $ua = LWP::UserAgent->new(
        parse_head => 0,
    );
    $ua->env_proxy();
    my $request = HTTP::Request->new(GET => $url);
    my $response = $ua->request($request, $fname);
    if (my $died = $response->header('X-Died')) {
        die "Cannot getstore $url to $fname: $died";
    } elsif ($response->code == 200) {
        return 1;
    } else {
        die "Cannot getstore $url to $fname: " . $response->status_line;
    }
}

sub zopen {
    IO::Zlib->new($_[0], "rb");
}

my $mirror = 'http://www.cpan.org/';
Getopt::Long::Configure("bundling");
Getopt::Long::GetOptions(
    'h|help' => \my $help,
    'verbose' => \my $verbose,
    'm|mirror=s' => \$mirror,
    'V|version' => \my $version,
);

sub show_version {
	print "cpan-search version $VERSION\n";
	exit 1;
}

sub show_usage {
	my $self = shift;

	die <<USAGE;
Usage: cpan-search [options] term [...]

Try `cpan-search --help` or `man cpan-search` for more options.
USAGE
	return 1;
}

sub show_help {
    print <<HELP;
Usage: cpan-search [options] term [...]

Options:

-h,--help Print a help message
-m,--mirror Specify the base URL for the mirror (e.g. http://cpan.cpantesters.org/)
-v,--verbose Turns on the most output
-V,--version Displays software version

Examples:

cpan-search Moose # search Moose
HELP

    exit 1;
}

if ($help) {
	show_help();
}
if ($version) {
	show_version();
}
if (!@ARGV) {
	show_usage();
}


my $index_url = "${mirror}/modules/02packages.details.txt.gz";

my $tmpfile = File::Temp->new(UNLINK => 1, SUFFIX => '.gz');
getstore($index_url, $tmpfile->filename);

my $fh = zopen($tmpfile) or die "cannot open $tmpfile";
# skip header part
while (my $line = <$fh>) {
	last if $line eq "\n";
}

my $search = $ARGV[0];
while (my $line = <$fh>) {
	my ($pkg, $version, $dist) = split /\s+/, $line;
        next if $version eq 'undef';
	print $pkg."\n" if $pkg =~ m/$search/i;
}


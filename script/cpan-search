#!/usr/bin/perl

use strict;
use warnings;

use File::Temp;
use Getopt::Long;
use HTTP::Request;
use IO::Zlib;
use LWP::UserAgent;

our $VERSION = "0.001";

sub getstore {
	my ($url, $fname) = @_;
	my $ua = LWP::UserAgent->new(parse_head => 0);
	$ua->env_proxy();
	my $request = HTTP::Request->new(GET => $url);
	my $response = $ua->request($request, $fname);
	if (my $died = $response->header('X-Died')) {
		die "Cannot getstore $url to $fname: $died";
	} elsif ($response->code == 200) {
		return 1;
	} else {
		die "Cannot getstore $url to $fname: " . $response->status_line;
	}
}

sub zopen {
	IO::Zlib->new($_[0], "rb");
}

my $mirror = 'http://www.cpan.org/';
Getopt::Long::Configure("bundling");
Getopt::Long::GetOptions(
	'h|help'          => \my $help,
	'v|verbose'       => \my $verbose,
	'm|mirror=s'      => \$mirror,
	'p|print-path'    => \my $print_path,
	'V|version'       => \my $version,
);

sub show_version {
	print "cpan-search version $VERSION\n";
	exit 1;
}

sub show_usage {
	my $self = shift;

	die <<USAGE;
Usage: cpan-search [options] term [...]

Try `cpan-search --help` or `man cpan-search` for more options.
USAGE
	return 1;
}

sub show_help {
	print <<HELP;
Usage: cpan-search [options] term [...]

Options:
  -h, --help		print a help message
  -m, --mirror		specify the base URL for the mirror (e.g. http://cpan.cpantesters.org/)
  -p, --print-path      print path
  -v, --verbose		turns on the most output
  -V, --version		displays software version

Examples:
cpan-search Moose # search Moose
HELP

	exit 1;
}

if ($help) {
	show_help();
}
if ($version) {
	show_version();
}
if (!@ARGV) {
	show_usage();
}


my $index_url = "${mirror}/modules/02packages.details.txt.gz";

my $tmpfile = File::Temp->new(UNLINK => 1, SUFFIX => '.gz');
getstore($index_url, $tmpfile->filename);

my $fh = zopen($tmpfile) or die "cannot open $tmpfile";
# skip header part
while (my $line = <$fh>) {
	last if $line eq "\n";
}

my $search = $ARGV[0];
while (my $line = <$fh>) {
	my ($pkg, $version, $dist) = split /\s+/, $line;
        next if $version eq 'undef';
	if ($pkg =~ m/$search/i) {
		if ($verbose) {
			printf "%-30s %-7s %-7s\n", $pkg, $version, $dist;
		} elsif ($print_path) {
			printf "%s\n", $dist;
		} else {
			printf "%s\n", $pkg;
		}
	}
}

__END__

=head1 NAME

cpan-search - Search CPAN modules.

=head1 SYNOPSIS

	# search Moose
	% cpan-search Moose

	# specify the mirror http://cpan.cpantesters.org/ and search Moose
	% cpan-search --mirror http://cpan.cpantesters.org/ Moose

=head1 AUTHOR

	Oleg Gashev
	oleg@gashev.net

=head1 COPYRIGHT

This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.

The full text of the license can be found in the LICENSE file included with
this module.

=head1 SEE ALSO

cpanm(1)

=cut

